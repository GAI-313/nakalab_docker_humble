# Copyright (c) 2024 Gai Nakatogawa
# This software is released under the MIT License.
# http://opensource.org/licenses/mit-license.php

# -- Base settings -----------------------------------------
FROM nvidia/cuda:12.3.2-cudnn9-runtime-ubuntu22.04 AS base
LABEL maintainer="Gai Nakatogawa <nakatogawagai@gmail.com>"
LABEL nakatogawalaboratory.vendor="Gai Nakatogawa"\
      nakatogawalaboratory.version="2.0.0"\
      nakatogawalaboratory.released="Oct 17 2024"

SHELL ["/bin/bash", "-c"]

ARG DEBIAN_FRONTEND=noninteractive

ENV LANG ja_JP.UTF-8
ENV TZ=Asia/Tokyo

ENV NVIDIA_VISIBLE_DEVICES \
    ${NVIDIA_VISIBLE_DEVICES:-all}
ENV NVIDIA_DRIVER_CAPABILITIES \
    ${NVIDIA_DRIVER_CAPABILITIES:+$NVIDIA_DRIVER_CAPABILITIES,}graphics

RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    locales software-properties-common tzdata

RUN locale-gen ja_JP ja_JP.UTF-8 && update-locale LC_ALL=ja_JP.UTF-8 LANG=ja_JP.UTF-8

RUN add-apt-repository universe

ENV LANG ja_JP.UTF-8
ENV TZ=Asia/Tokyo

RUN apt-get update && apt-get install -y \
    build-essential cmake g++ \
    iproute2 gnupg gnupg1 gnupg2 \
    libcanberra-gtk* \
    python3-pip  python3-tk \
    git wget curl \
    x11-utils x11-apps xterm xauth mesa-utils\
    nano vim htop \
    gdb valgrind sudo pulseaudio

# -----------------------------------------------------
FROM base AS install_from_git
RUN mkdir /src
WORKDIR /src

COPY ws_requirement.sh ./ws_requirement.sh
RUN chmod +x ./ws_requirement.sh && ./ws_requirement.sh
RUN rm ws_requirement.sh

# -----------------------------------------------------
FROM base AS ros_install
RUN curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg && \
    echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(. /etc/os-release && echo $UBUNTU_CODENAME) main" | sudo tee /etc/apt/sources.list.d/ros2.list > /dev/null

RUN apt-get update && apt-get install --no-install-recommends -y \
    ros-humble-desktop \
    python3-colcon-common-extensions \
    python3-rosdep2

RUN pip install setuptools==58.2.0 
RUN rm -rf /etc/ros/rosdep/sources.list.d/20-default.list && rosdep init
RUN rm -rf /var/lib/apt/lists/*

# ----------------------------------------------------
FROM ros_install AS add_user
ARG UID
ARG GID
ARG USER_NAME
ARG GROUP_NAME
ARG PASSWORD
ARG WORKSPACE_DIR
RUN groupadd -g $GID $GROUP_NAME && \
    useradd -m -s /bin/bash -u $UID -g $GID -G sudo $USER_NAME && \
    echo $USER_NAME:$PASSWORD | chpasswd && \
    echo "$USER_NAME   ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers

# ----------------------------------------------------
ARG WS_NAME=colcon_ws

USER ${USER_NAME}
RUN mkdir -p /home/${USER_NAME}/${WS_NAME}/src

WORKDIR /home/${USER_NAME}/${WS_NAME}/src

COPY --from=install_from_git /src/* .
COPY pkgs .

RUN sudo chmod -R 777 .

RUN . /opt/ros/humble/setup.bash && \
    rosdep update && \
    rosdep install -y -i --from-path . && \
    rm -rf /var/lib/apt/lists/*

WORKDIR /home/${USER_NAME}/${WS_NAME}

RUN . /opt/ros/humble/setup.bash && \
    colcon build --symlink-install

RUN echo "source /opt/ros/humble/setup.bash" >> /home/$USER_NAME/.bashrc
RUN echo "source ~/${WS_NAME}/install/setup.bash" >> /home/$USER_NAME/.bashrc
RUN echo "export PS1='\[\033[47;30m\]\$ROS_DISTRO\[\033[0m\]:\[\033[32m\]\u:\[\033[36m\]\w \[\033[37m\]\$ '" >> /home/${USER_NAME}/.bashrc

COPY assets/nanorc /home/$USER_NAME/.nanorc
COPY assets/entrypoint.sh /tmp/entrypoint.sh

ENTRYPOINT ["/tmp/entrypoint.sh"]
CMD ["/bin/bash"]
